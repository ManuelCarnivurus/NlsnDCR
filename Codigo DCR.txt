Option Explicit

    Dim m As Variant
    Dim mensaje, mensaje2, titulo, dt, n As String
    Dim UltimaFila As String
    Dim BrandName, SubBrand, Platform, ContentType, OSGroup, AV1, AV2, AV3, Formulas1, Formulas2 As String
    Dim Doble As String
    Dim Value1, Value2, Order As String
    Dim box As Integer

Sub DDDCR()

' Macro para check list DCR
' Creado por Juan Manuel Hernández Rivera
' juanmanuel.hernandez@nielsen.com
  
'The first step is to create a message box with the value that we need to evaluate
  
mensaje = "Type the checklist number you want to select"
mensaje2 = "(For Example: 116)"
titulo = "Type the check"

validating:

m = LCase(inputbox(Chr(13) + mensaje + Chr(13) & mensaje2, titulo, 116))
      
'Now we check all the posible cases to send it to the operation
      
     If IsNumeric(m) Then labels
     
    Select Case m
  
    Case 13 To 22
        GoTo DCR_option1
    
    Case 38
        GoTo DCR_option1
    
    Case 64
        mensaje = "Select the Frequency (1,2,3 or 4)"
        mensaje2 = "1)Daily    2)Weekly    3)Monthly    4)QTD"
        titulo = "Frequency check"
        box = LCase(inputbox(mensaje + Chr(13) + Chr(13) + mensaje2))
        GoTo DCR_option1
    
    
    Case 115 To 116
        GoTo DCR_option1
    
    Case 78 To 79
        GoTo DCR_option2
    
    Case 90 To 91
        GoTo DCR_option2
    
    Case 121 To 122
        GoTo DCR_option2
    
    Case "list"
        GoTo DCR_List
        
    Case Else: MsgBox ("Macro not registered yet, insert another one")
    GoTo validating
    
    End Select
    
    ' In this space we will declare all the formulas that will be applied in the excel
    
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'We will have two options, DCR_option1 includes at the end just one column with the result of the condition (Report or Release)
'DCR_Option includes two columns when first shows the result of the de formula (depending the check you select it will applied an specific formula), the second column will show the result of the condition (Report or Release)

DCR_option1:

    'We will hide the columns to show just the necessary (10 columns)
    
    Call hide_columns
    
    'On this process we will apply the formulas for the last column ir order to have the condition (Report or Release)
    
    Call procedure
    
    'To do this more visual we will put Report in red and Release in green
    
    Call condicionales
    
    'At this moment we will apply the headers because the have different values depending of the check
    
    Select Case m
    
    Case 13 To 16
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "Current Day SC Imprs (AV1)"
    Range(AV2 & "1").Value = "Previous Day SC Imprs (AV2)"
    Columns(Formulas1 & ":" & Formulas2).AutoFit
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    Case 18 To 22
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "Current Day SC Imprs (AV1)"
    Range(AV2 & "1").Value = "Previous Day SC Imprs (AV2)"
    Columns(Formulas1 & ":" & Formulas2).AutoFit
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    Case 38

    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "SC Imprs (AV1)"
    Columns(Formulas1).AutoFit
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    Case 64 And box = 1
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "SC Imprs (AV1)"
    Range(AV2 & "1").Value = "Estimated Audience UA (AV2)"
    Range(AV3 & "1").Value = "Estimated Frequency (AV3)"
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    Case 64 And box = 2 Or box = 3 Or box = 4
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "Estimated Impressions (AV1)"
    Range(AV2 & "1").Value = "Estimated Audience UA (AV2)"
    Range(AV3 & "1").Value = "Estimated Frequency (AV3)"
    
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    Case 115 To 116
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "FB App launches (AV1)"
    Range(AV2 & "1").Value = "FB App UA (AV2)"
    Columns(Formulas1 & ":" & Formulas2).AutoFit
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    'We saved the value of Formulas1 to be used in the next function, this way we optimize to create
    'just one function for Formulas1 for DCR_option1 and Formulas2 for DCR_Option2
    
    Order = Formulas1
    
    End Select
    
    GoTo ending
    
DCR_option2:

    'We will hide the columns to show just the necessary (10 columns)
    
    Call hide_columns
    
    'On this process we will apply two formulas
    'The first shows the result of the de formula (depending the check you select it will applied an specific formula)
    'The second column will show the result of the condition (Report or Release)

    Call Procedure2
    
    'To do this more visual we will put Report in red and Release in green
    
    Call condicionales
    
    Select Case m
    
    'At this moment we will apply the headers because the have different values depending of the check
     
    Case 78 To 79
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(AV1 & "1").Value = "Census Impr (AV1)"
    Range(AV2 & "1").Value = "FB Impr (AV2)"
    Range(Formulas2 & "1").Value = "Condition"

    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    Case 90 To 91
    
    Range(Formulas1 & "1").Value = "Formula"
    Range(Formulas2 & "1").Value = "Condition"
    Range(AV1 & "1").Value = "Census (AV1)"
    Range(AV2 & "1").Value = "Deviation (AV2)"
    Range(AV3 & "1").Value = "Mean (AV3)"
    
    Columns(Formulas1 & ":" & Formulas2).AutoFit

    Range((Formulas1 & "1"), (Formulas2 & "1")).Select

    
    Case 121 To 122

    Range(AV1 & "1").Value = "Raw Frequency (AV1)"
    Range(AV2 & "1").Value = "Estimated Frequency (AV2)"
    Range(Formulas1 & "1").Value = "Formula"
    Range(Formulas2 & "1").Value = "Condition"
    
    Columns(Formulas1 & ":" & Formulas2).AutoFit
    
    Range((Formulas1 & "1"), (Formulas2 & "1")).Select
    
    
    End Select
    
    Order = Formulas2
    
    GoTo ending
    
    
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

DCR_List:

'Before starting the procedure with "list" it is necessary to be sure that a sheet call results doesn't exist
'The next instruccions will erase the sheet Results if exists

    Sheets("Entity Management").Select
    On Error GoTo step2
    If Sheets("Results").Select = True Then
    Application.DisplayAlerts = False
    Sheets("Results").Delete
    Application.DisplayAlerts = True
    End If

'The second step will take the column I and it will paste in a new sheet
    
step2:
    
    Sheets("Entity Management").Select
    Columns("I:I").Select
    Selection.Copy
    Sheets.Add After:=Sheets(Sheets.Count)
    Columns("A:A").Select
    ActiveSheet.Paste

    ActiveSheet.Name = "Results"

    Columns("A:A").Select
    Application.CutCopyMode = False

'Now we will separate the numbers in each column removing the duplicates

    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
        Semicolon:=False, Comma:=True, Space:=False, Other:=False, FieldInfo _
        :=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1)), TrailingMinusNumbers:= _
        True
    
    Dim i As Variant
    
    For i = 1 To Columns.Count

    Columns(i).RemoveDuplicates Columns:=1, Header:=xlYes
    
    If WorksheetFunction.CountA(Columns(i)) > 0 Then Columns(i).RemoveDuplicates Columns:=1, Header:=xlYes Else Exit For
        
    Next i
    
'We paste all the values in one column

    Range("b1:b" & Range("b65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("c1:c" & Range("c65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("d1:d" & Range("d65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("e1:e" & Range("e65000").End(xlUp).Row).Copy
     Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("f1:f" & Range("f65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("g1:g" & Range("g65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("h1:h" & Range("h65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("I1:I" & Range("i65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("J1:J" & Range("j65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("K1:K" & Range("k65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("L1:L" & Range("l65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("M1:M" & Range("m65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("N1:N" & Range("n65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("O1:O" & Range("o65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("P1:P" & Range("p65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("Q1:Q" & Range("q65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues
    Range("R1:R" & Range("r65000").End(xlUp).Row).Copy
        Range("a65000").End(xlUp).Offset(1, 0).PasteSpecial xlPasteValues

    ' We clean the document erasing all the columns except column A
    Columns("B:AZ").Select
    Selection.Delete Shift:=xlToLeft
    
    ' Now we remove duplicates adding an ASC order
    
    Range("A1").Select
    Selection.AutoFilter
    Columns("A:A").Select
    ActiveSheet.Range("A:A").RemoveDuplicates Columns:=1, Header:=xlYes
    Range("A:A").SpecialCells(xlCellTypeBlanks).EntireRow.Delete
    Range("A1").Select
    Selection.AutoFilter
    Columns("A:A").Select
    ActiveSheet.Range("A:A").RemoveDuplicates Columns:=1, Header:=xlYes
    ActiveSheet.Sort.SortFields.Clear
    ActiveSheet.Sort.SortFields.Add Key:=Range _
        ("A1:A3"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveSheet.Sort
    .SetRange Range("A:A")
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

Range("A2").Select

'''''''''''''''''''''''''''''''''''''''''''

    
    Dim v As Variant
    
Bucle:
    
    If ActiveCell <> "" Then
    GoTo Formulario
    Else: GoTo nextstep
    End If
    


Formulario:
    
    v = ActiveCell.Value
    
    If v = 24 Or v = 25 Or v = 30 Or v = 31 Or v = 47 Or v = 131 Or v = 132 Or v = 134 Or v = 135 Or v = 136 Or v = 137 Or v = 160 Or v = 161 Then
    ActiveCell.Offset(0, 1) = "Release"
    End If
    
    If v = 33 Or v = 34 Or v = 35 Or v = 36 Or v = 44 Or v = 133 Then
    ActiveCell.Offset(0, 1) = "Report"
    End If
    
    If v = 17 Or v = 37 Or v = 40 Or v = 45 Or v = 46 Or v = 48 Or v = 50 Or v = 70 Or v = 74 Or v = 32 Then
    ActiveCell.Offset(0, 1) = "Manual"
    End If
    
    If v = 13 Or v = 14 Or v = 15 Or v = 16 Or v = 18 Or v = 19 Or v = 20 Or v = 21 Or v = 22 Or v = 23 _
    Or v = 38 Or v = 39 Or v = 41 Or v = 42 Or v = 43 Or v = 64 _
    Or v = 73 Or v = 75 Or v = 76 Or v = 77 Or v = 98 Or v = 99 Or v = 101 Or v = 102 _
    Or v = 78 Or v = 79 Or v = 90 Or v = 91 Or v = 115 Or v = 116 Or v = 121 Or v = 122 Then
    ActiveCell.Offset(0, 1) = "Formula"
    End If
    
    If v = 1001 Or v = 1002 Or v = 1003 Or v = 1004 Or v = 1007 Or v = 1008 Or v = 1108 Or v = 1109 _
    Or v = 1110 Or v = 1111 Or v = 1112 Or v = 1116 Or v = 1117 Or v = 1118 Or v = 1119 Or v = 1120 _
    Or v = 1121 Or v = 1125 Or v = 1126 Or v = 1127 Or v = 1128 Or v = 1129 Or v = 1130 Or v = 1131 _
    Or v = 1133 Or v = 1134 Or v = 1135 Or v = 1149 Or v = 1150 Or v = 1151 Or v = 1152 Or v = 1191 _
    Or v = 1194 Or v = 2000 Or v = 2001 Or v = 2002 Or v = 2003 Or v = 2004 Or v = 2005 Or v = 2006 _
    Or v = 2007 Or v = 2008 Or v = 2009 Or v = 2010 Or v = 2011 Or v = 2012 Or v = 2013 Or v = 2014 _
    Or v = 2015 Or v = 2016 Or v = 2017 Or v = 3001 Or v = 3003 Or v = 3004 Or v = 3005 Or v = 3006 _
    Or v = 4003 Or v = 4007 Or v = 4008 Or v = 4009 Or v = 4010 Then
    ActiveCell.Offset(0, 1) = "Report"
    End If
    
    If v = 501 Or v = 502 Or v = 503 Or v = 504 Or v = 505 Or v = 506 Or v = 507 Or v = 508 Or v = 509 _
    Or v = 510 Or v = 511 Or v = 512 Or v = 513 Or v = 514 Or v = 515 Or v = 519 Or v = 520 Or v = 521 _
    Or v = 522 Or v = 523 Or v = 524 Or v = 525 Or v = 526 Or v = 527 Or v = 528 Or v = 529 Or v = 530 _
    Or v = 531 Or v = 532 Or v = 533 Or v = 534 Or v = 535 Or v = 536 Or v = 537 Or v = 538 Or v = 539 _
    Or v = 540 Or v = 541 Or v = 542 Or v = 543 Or v = 544 Or v = 545 Or v = 546 Or v = 548 Or v = 549 _
    Or v = 550 Then
    ActiveCell.Offset(0, 1) = "Report"
    End If
    
    Selection.Offset(1).Select
    GoTo Bucle
    
nextstep:

    Call condicionales2
    '''''''''''''''''''''
    Range("A1").Select
    
    MsgBox ("Done")
    
    Exit Sub
    
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

ending:

'Finally as this three functions says, we will apply format and it will be ordered by the condition (Report first and then Release)

    Call formato
    
    Call cuadricula
    
    Call OrderbyFormulas

 MsgBox ("Done")
 
End Sub
Private Sub labels()
   'BrandName

    Rows("1:1").Select
    Selection.Find(What:="Brand Name", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
        
    'BrandN = ActiveCell.Address
    
    BrandName = Split(ActiveCell.Address, "$")(1)
   
    'Subrand
        
     Rows("1:1").Select
    Selection.Find(What:="Sub Brand Name", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
            
    SubBrand = Split(ActiveCell.Address, "$")(1)
    
    'Platform
        
     Rows("1:1").Select
    Selection.Find(What:="Platform", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
         
     Platform = Split(ActiveCell.Address, "$")(1)
       
    
    'ContentType
        
     Rows("1:1").Select
    Selection.Find(What:="Content Type", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
        
    ContentType = Split(ActiveCell.Address, "$")(1)
    'OSGroup
        
     Rows("1:1").Select
    Selection.Find(What:="OS Group", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
          
     OSGroup = Split(ActiveCell.Address, "$")(1)
    
    'AV1
        
     Rows("1:1").Select
    Selection.Find(What:="Actual Value 1", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
        
    AV1 = Split(ActiveCell.Address, "$")(1)

    'AV2
        
     Rows("1:1").Select
    Selection.Find(What:="Actual Value 2", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
        
    AV2 = Split(ActiveCell.Address, "$")(1)
    
    'AV3
        
     Rows("1:1").Select
    Selection.Find(What:="Actual Value 3", After:=ActiveCell, LookIn:=xlFormulas _
        , LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate
        
    AV3 = Split(ActiveCell.Address, "$")(1)
    
    'Formulas1
        
    Range("A1").Select
    Selection.End(xlToRight).Select
    ActiveCell.Offset(0, 1).Select
    Formulas1 = Split(ActiveCell.Address, "$")(1)
    
    'Formulas2
        
    Range("A1").Select
    Selection.End(xlToRight).Select
    ActiveCell.Offset(0, 2).Select
    Formulas2 = Split(ActiveCell.Address, "$")(1)
    
    End Sub
    
Private Sub hide_columns()

    'We hide all the columns
    
    ActiveSheet.Cells.Select
    Cells.FormatConditions.Delete
    Cells.Borders.LineStyle = xlNone
    Columns.AutoFit
    Range("A1").Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
    
    
    'Then we show just the relevant ones
    
    Columns(BrandName).Hidden = False
    Columns(BrandName).Select
    Columns(SubBrand).Hidden = False
    Columns(Platform).Hidden = False
    Columns(AV1).Hidden = False
    Columns(AV2).Hidden = False
    Columns(AV3).Hidden = False
    Columns(ContentType).Hidden = False
    Columns(OSGroup).Hidden = False
    
    Range(BrandName & "2").Select
    Range(Formulas1 & "2").Select
    
    
End Sub


Private Sub condicionales()

    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
            Formula1:="=""Release"""
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Font
            .Color = -16752384
            .TintAndShade = 0
        End With
        With Selection.FormatConditions(1).Interior
            .PatternColorIndex = xlAutomatic
            .Color = 13561798
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
            Formula1:="=""Report"""
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Font
            .Color = -16383844
            .TintAndShade = 0
        End With
        With Selection.FormatConditions(1).Interior
            .PatternColorIndex = xlAutomatic
            .Color = 13551615
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False

End Sub
        

Private Sub Condicionales3()

    'Se agrega formato
    Columns("B:B").Select
    
    'Release Series
    
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Release"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .Color = -16752384
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 13561798
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
    'Formula Series
    
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Formula"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .Color = -16751204
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 10284031
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
   
   'Manual Series
   
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Manual"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = -0.499984740745262
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent5
        .TintAndShade = 0.399945066682943
    End With
    Selection.FormatConditions(1).StopIfTrue = False

    'Report Series
    
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Report"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .Color = -16383844
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 13551615
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False

End Sub

Private Sub formato()

    With Selection.Characters.Font
            .Name = "Arial"
            .FontStyle = "Negrita"
        End With
        With Selection
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
                End With
                
        Selection.Columns.AutoFit

End Sub


Private Sub cuadricula()

    Range(BrandName & "1").Select
    Range(Selection, Selection.End(xlToRight)).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
    End With


End Sub


Private Sub condicionales2()

    'Se agrega formato
    Columns("B:B").Select
    
    'Release Series
    
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Release"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .Color = -16752384
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 13561798
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
    'Formula Series
    
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Formula"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .Color = -16751204
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 10284031
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
   
   'Manual Series
   
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Manual"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = -0.499984740745262
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent5
        .TintAndShade = 0.399945066682943
    End With
    Selection.FormatConditions(1).StopIfTrue = False

    'Report Series
    
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""Report"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Font
        .Color = -16383844
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 13551615
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False

End Sub

Private Sub OrderbyFormulas()

'Cuando la condicional se encuentra en AS
    Rows("1:1").Select
    Selection.AutoFilter
    ActiveSheet.AutoFilter.Sort.SortFields.Clear
    ActiveSheet.AutoFilter.Sort.SortFields.Add Key _
        :=Range(Order & "1"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
    With ActiveSheet.AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Selection.AutoFilter
    Range(BrandName & "1").Select
    
End Sub

Function procedure()
    
    Dim f13_1, f38_1, f64_1, f64_2, f115_1 As String
    
    f115_1 = "=IF(OR(ISNUMBER(RC[-19])=FALSE,ISNUMBER(RC[-15])=FALSE),""Report"",IF(RC[-15]>=RC[-19],""Release"",""Report""))"
    f13_1 = "=IF(OR(ISNUMBER(RC[-19])=FALSE,ISNUMBER(RC[-15])=FALSE),""Report"",IF(RC[-15]>=RC[-19],""Release"",""Report""))"
    f38_1 = "=IF(ISNUMBER(RC[-19]),IF(RC[-19]<1000,""Report"",""Release""),""Report"")"
    f64_1 = "=IF(OR(ISNUMBER(RC[-11])=FALSE,ISNUMBER(RC[-15])=FALSE),""Report"",IF(AND(RC[-11]>100,RC[-15]<10),""Release"",""Report""))"
    f64_2 = "=IF(OR(ISNUMBER(RC[-11])=FALSE,ISNUMBER(RC[-15])=FALSE,ISNUMBER(RC[-19])=FALSE),""Report"",IF(AND(RC[-11]>100,RC[-15]>10,RC[-19]>1000),""Release"", ""Report""))"
    
     'Formula for each check
    Value1 = Switch( _
    m > 114 And m < 117, f115_1, _
    m >= 13 And m <= 22, f13_1, _
    m = 38, f38_1, _
    m = 64 And box = 1, f64_1, _
    m = 64 And box = 2 Or box = 3 Or box = 4, f64_2, _
    True, "Error")
    
    ActiveCell.FormulaR1C1 = Value1
    'Se ingresa autofill para que las formulas se copien automaticamente

    UltimaFila = ActiveSheet.Cells(Rows.Count, "A").End(xlUp).Row
    Selection.AutoFill Destination:=Range((Formulas1 & "2") & ":" & Formulas1 & UltimaFila)

    'Se ingresan las condiciones para que aparezca el error en verde y rojo
    Columns(Formulas1 & ":" & Formulas1).Select
    
    End Function
        
Function Procedure2()

    Dim f78_1, f90_1, f78_2, f90_2, f121_1, f121_2 As String
    
    f78_1 = "=IF(OR(ISNUMBER(RC[-15])=FALSE,ISNUMBER(RC[-19])=FALSE),""No Data"",ABS(1-(RC[-15]/RC[-19])))"
    f78_2 = "=IF(OR(ISNUMBER(RC[-1])=FALSE),""Report"",IF(RC[-1]<=20%,""Release"",""Report""))"
    f90_1 = "=IF(OR(ISNUMBER(RC[-11])=FALSE,ISNUMBER(RC[-19])=FALSE),""No Data"",ABS((RC[-11]-RC[-19])/RC[-19]))"
    f90_2 = "=IF(OR(ISNUMBER(RC[-1])=FALSE),""Report"",IF(RC[-1]<=1000%,""Release"",""Report""))"
    f121_1 = "=IF(OR(ISNUMBER(RC[-19])=FALSE,ISNUMBER(RC[-15])=FALSE),""No Data"",ABS(RC[-15]/RC[-19]))"
    f121_2 = "=IF(OR(ISNUMBER(RC[-1])=FALSE),""Report"",IF(RC[-1]<=2,""Release"",""Report""))"

    'Formula for each check
    Value1 = Switch( _
    m >= 78 And m <= 79, f78_1, _
    m >= 90 And m <= 91, f90_1, _
    m >= 121 And m <= 122, f121_1, _
    True, "Error")
    
    Value2 = Switch( _
    m >= 78 And m <= 79, f78_2, _
    m >= 90 And m <= 91, f90_2, _
    m >= 121 And m <= 122, f121_2, _
    True, "Error")

   
    ActiveCell.FormulaR1C1 = Value1
    
    'Se ingresa autofill para que las formulas se copien automaticamente

    UltimaFila = ActiveSheet.Cells(Rows.Count, "A").End(xlUp).Row
    Selection.AutoFill Destination:=Range((Formulas1 & "2") & ":" & Formulas1 & UltimaFila)

    'se añade formula AS2

    Range(Formulas2 & "2").Select

    ActiveCell.FormulaR1C1 = Value2
    'Se ingresa autofill de nuevo para AS2

    UltimaFila = ActiveSheet.Cells(Rows.Count, "A").End(xlUp).Row
    Selection.AutoFill Destination:=Range((Formulas2 & "2") & ":" & Formulas2 & UltimaFila)
    
    'Se ingresan las condiciones para que aparezca el error en verde y rojo
    Columns(Formulas1 & ":" & Formulas2).AutoFit
    
    Columns(Formulas2).Select
    
End Function
    
    